"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/ORB6UuFepML
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Arimo } from 'next/font/google'

arimo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";

import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";

export function Component() {
  const [videoUrl, setVideoUrl] = useState("");
  const [thumbnailUrl, setThumbnailUrl] = useState("");
  const [thumbnailSize, setThumbnailSize] = useState("0");

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const videoId = extractVideoId(videoUrl);
    if (videoId) {
      setThumbnailUrl(
        `https://img.youtube.com/vi/${videoId}/${thumbnailSize}.jpg`
      );
    } else {
      alert("Invalid YouTube URL");
    }
  };

  const extractVideoId = (url: string) => {
    const regex =
      /(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/;
    const match = url.match(regex);
    return match ? match[1] : null;
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-background text-foreground">
      <div className="max-w-md w-full space-y-6 px-4">
        <div className="text-center">
          <h1 className="text-4xl font-bold tracking-tight">
            YouTube Thumbnail Downloader
          </h1>
          <p className="text-muted-foreground text-lg">
            Enter a YouTube video URL and download the thumbnail.
          </p>
        </div>
        <Card className="shadow-lg">
          <CardContent className="space-y-6">
            <form className="space-y-4" onSubmit={handleSubmit}>
              <div className="grid gap-2">
                <Label htmlFor="videoUrl" className="text-base font-medium">
                  YouTube Video URL
                </Label>
                <Input
                  id="videoUrl"
                  type="text"
                  value={videoUrl}
                  onChange={(e) => setVideoUrl(e.target.value)}
                  placeholder="https://www.youtube.com/watch?v=dQw4w9WgXcQ"
                  className="px-4 py-3 rounded-lg border border-input focus:border-primary focus:ring-1 focus:ring-primary"
                />
              </div>
              <div className="grid gap-2">
                <Label
                  htmlFor="thumbnailSize"
                  className="text-base font-medium"
                >
                  Thumbnail Size
                </Label>
                <Select onValueChange={setThumbnailSize} defaultValue="0">
                  <SelectTrigger id="thumbnailSize">
                    <SelectValue placeholder="Select size" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="0">Default (480x360)</SelectItem>
                    <SelectItem value="1">Small (120x90)</SelectItem>
                    <SelectItem value="2">Medium (320x180)</SelectItem>
                    <SelectItem value="3">Large (640x480)</SelectItem>
                    <SelectItem value="maxresdefault">
                      Max Resolution
                    </SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <Button type="submit" className="w-full">
                Get Thumbnail
              </Button>
            </form>
          </CardContent>
        </Card>
        {thumbnailUrl && (
          <div className="flex flex-col items-center space-y-4">
            <img
              src={thumbnailUrl}
              alt="YouTube Thumbnail"
              className="rounded-lg shadow-lg max-w-full h-auto"
            />
            <a
              href={thumbnailUrl}
              download={`youtube_thumbnail_${thumbnailSize}.jpg`}
              className="inline-flex items-center justify-center rounded-md text-sm font-medium bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2"
            >
              Download Image
            </a>
          </div>
        )}
      </div>
    </div>
  );
}
